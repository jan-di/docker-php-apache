name: Build & Push Docker Images

env:
  DOCKERHUB_TAG: 'jandi/php-apache'
  GITHUB_TAG: 'ghcr.io/jan-di/php-apache'

on:
  push:
    branches:    
      - main
  schedule:
    - cron:  '5 5 * * 5'

jobs:
  main:
    name: Build Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.3', '7.4', '8.0']
        include:
        - php: '7.4'
          latest: true
    steps:
      - 
        name: Checkout Repository
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - 
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Set cache buster
        id: cache_buster
        run: |
          if [ '${{ github.event_name }}' == 'schedule' ]
          then
            echo "Scheduled run. Disable cache."
            echo "::set-output name=suffix::-no-cache"
          else
            echo "Non-scheduled run. Enable cache."
            echo "::set-output name=suffix::"
          fi
      -
        name: Set Docker Tags
        id: docker_tags
        run: |
          TAGS=()
          TAGS+=(${{ env.GITHUB_TAG }}:${{ matrix.php }})
          TAGS+=(${{ env.DOCKERHUB_TAG }}:${{ matrix.php }})
          if [ '${{ matrix.latest }}' == 'true' ]
          then
            TAGS+=(${{ env.GITHUB_TAG }}:latest)
            TAGS+=(${{ env.DOCKERHUB_TAG }}:latest)
          fi
          TAG_LIST=$(IFS=,; printf '%s' "${TAGS[*]}")

          echo "Image tags:"
          printf -- '- %s\n' "${TAGS[@]}"
          echo "::set-output name=tags::$TAG_LIST"
      -
        name: Build & Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: FROM_TAG=${{ matrix.php }}-apache
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=registry,ref=${{ env.GITHUB_TAG }}:${{ matrix.php }}${{ steps.cache_buster.outputs.suffix }}
          cache-to: type=inline
      -
        name: Image digest
        run: |
          echo ${{ matrix.php }} ${{ steps.docker_build.outputs.digest }}