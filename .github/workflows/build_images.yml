name: Build & Publish Docker Images

env:
  BASE_TAG: 'jandi/php-apache'

on:
  push:
    branches:    
      - main
  schedule:
    - cron:  '5 5 * * 5'

jobs:
  main:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      -
        name: Create cache buster suffix
        id: cache_buster
        run: |
          if [ $EVENT_NAME == 'schedule' ]
          then
            echo "Scheduled run. Disable cache."
            echo "::set-output name=suffix::-no-cache"
          else
            echo "Non-scheduled run. Enable cache."
            echo "::set-output name=suffix::"
          fi
        env:
          EVENT_NAME: ${{ github.event_name }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Build with PHP 7.4
        id: docker_build_7_4
        uses: docker/build-push-action@v2
        with:
          build-args: FROM_TAG=7.4-apache
          push: true
          tags: |
            ${{ env.BASE_TAG }}:7.4
            ${{ env.BASE_TAG }}:latest
          cache-from: type=registry,ref=${{ env.BASE_TAG }}:7.4${{ steps.cache_buster.outputs.suffix }}
          cache-to: type=inline
      -
        name: Build with PHP 7.3
        id: docker_build_7_3
        uses: docker/build-push-action@v2
        with:
          build-args: FROM_TAG=7.3-apache
          push: true
          tags: |
            ${{ env.BASE_TAG }}:7.3
          cache-from: type=registry,ref=${{ env.BASE_TAG }}:7.3${{ steps.cache_buster.outputs.suffix }}
          cache-to: type=inline
      -
        name: Image digests
        run: |
          echo ${{ env.BASE_TAG }}:7.4 ${{ steps.docker_build_7_4.outputs.digest }}
          echo ${{ env.BASE_TAG }}:7.3 ${{ steps.docker_build_7_3.outputs.digest }}